datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

generator client {
    provider = "prisma-client-js"
    // binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

model User {
    id           Int      @id @default(autoincrement())
    email        String?
    passwordHash String?  @map("password_hash")
    provider     String?
    createdAt    DateTime @default(now()) @map("created_at")

    adventures Adventure[]
}

model Adventure {
    id            Int      @id @default(autoincrement())
    status        String
    failureReason String?  @map("failure_reason")
    totalDistance Float    @map("total_distance")
    createdAt     DateTime @default(now()) @map("created_at")

    userId     Int
    user       User                 @relation(fields: [userId], references: [id])
    waypoints  AdventureWaypoint[]
    preference AdventurePreference?
    Route      Route[]
}

model AdventureWaypoint {
    id            Int      @id @default(autoincrement())
    sequence      Int
    spotType      String   @map("spot_type")
    selectionType String   @map("selection_type")
    latitude      Float
    longitude     Float
    locationName  String?  @map("location_name")
    createdAt     DateTime @default(now()) @map("created_at")

    adventureId Int
    adventure   Adventure @relation(fields: [adventureId], references: [id])

    @@unique([adventureId, sequence])
    @@map("adventure_waypoints")
}

model AdventurePreference {
    id              Int      @id @default(autoincrement())
    totalDistanceKm Float    @map("total_distance_km")
    waypointCount   Int      @map("waypoint_count")
    createdAt       DateTime @default(now()) @map("created_at")

    adventureId Int       @unique
    adventure   Adventure @relation(fields: [adventureId], references: [id])

    @@map("adventures_preferences")
}

model Route {
    id            Int      @id @default(autoincrement())
    routeJson     Json     @map("route_json")
    totalDistance Float    @map("total_distance") //各地点間の距離
    totalDulation Int      @map("total_dulation")
    createdAt     DateTime @default(now()) @map("created_at")

    adventureId Int
    adventure   Adventure @relation(fields: [adventureId], references: [id])
}
